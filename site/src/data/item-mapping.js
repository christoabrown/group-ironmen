import {
  ABYSSAL_TENTACLE,
  ABYSSAL_TENTACLE_OR,
  ABYSSAL_WHIP,
  ABYSSAL_WHIP_OR,
  ACCURSED_SCEPTRE,
  ACCURSED_SCEPTRE_A,
  ACCURSED_SCEPTRE_AU,
  ACCURSED_SCEPTRE_U,
  ADAMANT_DEFENDER_L, AHRIMS_HOOD, AHRIMS_HOOD_100, AHRIMS_HOOD_25, AHRIMS_HOOD_50, AHRIMS_HOOD_75, AHRIMS_ROBESKIRT, AHRIMS_ROBESKIRT_100, AHRIMS_ROBESKIRT_25, AHRIMS_ROBESKIRT_50, AHRIMS_ROBESKIRT_75, AHRIMS_ROBETOP, AHRIMS_ROBETOP_100, AHRIMS_ROBETOP_25, AHRIMS_ROBETOP_50, AHRIMS_ROBETOP_75, AHRIMS_STAFF, AHRIMS_STAFF_100, AHRIMS_STAFF_25, AHRIMS_STAFF_50, AHRIMS_STAFF_75, AMULET_OF_BLOOD_FURY, AMULET_OF_FURY, AMULET_OF_FURY_OR,
  AMULET_OF_GLORY,
  AMULET_OF_GLORY1,
  AMULET_OF_GLORY2,
  AMULET_OF_GLORY3,
  AMULET_OF_GLORY5,
  AMULET_OF_GLORY_T,
  AMULET_OF_GLORY_T1,
  AMULET_OF_GLORY_T2,
  AMULET_OF_GLORY_T3,
  AMULET_OF_GLORY_T5, AMULET_OF_TORTURE, AMULET_OF_TORTURE_OR,
  AMYLASE_CRYSTAL,
  ANCESTRAL_HAT,
  ANCESTRAL_ROBE_BOTTOM,
  ANCESTRAL_ROBE_TOP,
  ANCIENT_HALO_L,
  ANCIENT_WYVERN_SHIELD,
  ANCIENT_WYVERN_SHIELD_21634, ANGUISH_ORNAMENT_KIT,
  ARCANE_SIGIL,
  ARCHERS_RING,
  ARCHERS_RING_I, ARMADYL_GODSWORD, ARMADYL_GODSWORD_OR, ARMADYL_GODSWORD_ORNAMENT_KIT,
  ARMADYL_HALO_L,
  ASSEMBLER_MAX_CAPE_L,
  AVAS_ASSEMBLER_L,
  AVERNIC_DEFENDER_L, BANDOS_GODSWORD, BANDOS_GODSWORD_OR, BANDOS_GODSWORD_ORNAMENT_KIT,
  BANDOS_HALO_L,
  BARRONITE_MACE_L,
  BASILISK_JAW, BERSERKER_NECKLACE, BERSERKER_NECKLACE_OR, BERSERKER_NECKLACE_ORNAMENT_KIT,
  BERSERKER_RING,
  BERSERKER_RING_I,
  BIRD_NEST,
  BIRD_NEST_13653,
  BIRD_NEST_22798,
  BIRD_NEST_22800,
  BIRD_NEST_5071,
  BIRD_NEST_5072,
  BIRD_NEST_5073,
  BIRD_NEST_5074,
  BIRD_NEST_5075,
  BIRD_NEST_7413,
  BLACK_DEFENDER_L,
  BLACK_MASK,
  BLADE_OF_SAELDOR,
  BLADE_OF_SAELDOR_INACTIVE,
  BONECRUSHER_NECKLACE, BOOK_OF_BALANCE_OR, BOOK_OF_DARKNESS_OR, BOOK_OF_LAW_OR, BOOK_OF_WAR_OR,
  BOTTOMLESS_COMPOST_BUCKET,
  BOTTOMLESS_COMPOST_BUCKET_22997,
  BOW_OF_FAERDHINEN,
  BOW_OF_FAERDHINEN_INACTIVE,
  BRASSICA_HALO_L,
  BRONZE_DEFENDER_L,
  BRYOPHYTAS_STAFF,
  BRYOPHYTAS_STAFF_UNCHARGED, CANNON_BARRELS, CANNON_BARRELS_OR, CANNON_BASE, CANNON_BASE_OR, CANNON_FURNACE, CANNON_FURNACE_OR, CANNON_STAND, CANNON_STAND_OR,
  CLUE_NEST_EASY,
  CLUE_NEST_ELITE,
  CLUE_NEST_HARD,
  CLUE_NEST_MEDIUM,
  COINS_995,
  CRAWS_BOW,
  CRAWS_BOW_U,
  CRYSTAL_ARMOUR_SEED,
  CRYSTAL_AXE,
  CRYSTAL_AXE_INACTIVE,
  CRYSTAL_BODY,
  CRYSTAL_BOW,
  CRYSTAL_BOW_24123,
  CRYSTAL_BOW_INACTIVE,
  CRYSTAL_HALBERD,
  CRYSTAL_HALBERD_24125,
  CRYSTAL_HALBERD_INACTIVE,
  CRYSTAL_HARPOON,
  CRYSTAL_HARPOON_INACTIVE,
  CRYSTAL_HELM,
  CRYSTAL_LEGS,
  CRYSTAL_PICKAXE,
  CRYSTAL_PICKAXE_INACTIVE,
  CRYSTAL_SHIELD,
  CRYSTAL_SHIELD_24127,
  CRYSTAL_SHIELD_INACTIVE,
  CRYSTAL_TOOL_SEED,
  CRYSTAL_WEAPON_SEED,
  CURVED_BONE,
  DARK_BOW,
  DARK_BOW_12765,
  DARK_BOW_12766,
  DARK_BOW_12767,
  DARK_BOW_12768,
  DARK_BOW_20408,
  DARK_INFINITY_BOTTOMS,
  DARK_INFINITY_COLOUR_KIT,
  DARK_INFINITY_HAT,
  DARK_INFINITY_TOP,
  DECORATIVE_ARMOUR_L,
  DECORATIVE_ARMOUR_L_24159,
  DECORATIVE_ARMOUR_L_24162,
  DECORATIVE_ARMOUR_L_24163,
  DECORATIVE_ARMOUR_L_24164,
  DECORATIVE_ARMOUR_L_24165,
  DECORATIVE_ARMOUR_L_24166,
  DECORATIVE_ARMOUR_L_24167,
  DECORATIVE_ARMOUR_L_24168,
  DECORATIVE_BOOTS_L,
  DECORATIVE_FULL_HELM_L,
  DECORATIVE_HELM_L,
  DECORATIVE_SHIELD_L,
  DECORATIVE_SWORD_L, DHAROKS_GREATAXE, DHAROKS_GREATAXE_100, DHAROKS_GREATAXE_25, DHAROKS_GREATAXE_50, DHAROKS_GREATAXE_75, DHAROKS_HELM, DHAROKS_HELM_100, DHAROKS_HELM_25, DHAROKS_HELM_50, DHAROKS_HELM_75, DHAROKS_PLATEBODY, DHAROKS_PLATEBODY_100, DHAROKS_PLATEBODY_25, DHAROKS_PLATEBODY_50, DHAROKS_PLATEBODY_75, DHAROKS_PLATELEGS, DHAROKS_PLATELEGS_100, DHAROKS_PLATELEGS_25, DHAROKS_PLATELEGS_50, DHAROKS_PLATELEGS_75,
  DRAGON_AXE, DRAGON_AXE_OR, DRAGON_BOOTS, DRAGON_BOOTS_G, DRAGON_BOOTS_ORNAMENT_KIT, DRAGON_CHAINBODY_3140, DRAGON_CHAINBODY_G, DRAGON_CHAINBODY_ORNAMENT_KIT,
  DRAGON_DEFENDER_L, DRAGON_DEFENDER_ORNAMENT_KIT, DRAGON_DEFENDER_T, DRAGON_FULL_HELM, DRAGON_FULL_HELM_G, DRAGON_FULL_HELM_ORNAMENT_KIT,
  DRAGON_HARPOON, DRAGON_HARPOON_OR,
  DRAGON_HUNTER_CROSSBOW,
  DRAGON_HUNTER_CROSSBOW_B,
  DRAGON_HUNTER_CROSSBOW_T, DRAGON_KITESHIELD, DRAGON_KITESHIELD_G, DRAGON_KITESHIELD_ORNAMENT_KIT, DRAGON_LEGSSKIRT_ORNAMENT_KIT,
  DRAGON_PICKAXE, DRAGON_PICKAXE_12797, DRAGON_PICKAXE_OR, DRAGON_PICKAXE_OR_25376, DRAGON_PLATEBODY, DRAGON_PLATEBODY_G, DRAGON_PLATEBODY_ORNAMENT_KIT, DRAGON_PLATELEGS, DRAGON_PLATELEGS_G, DRAGON_PLATESKIRT, DRAGON_PLATESKIRT_G, DRAGON_SCIMITAR, DRAGON_SCIMITAR_OR, DRAGON_SCIMITAR_ORNAMENT_KIT, DRAGON_SQ_SHIELD, DRAGON_SQ_SHIELD_G, DRAGON_SQ_SHIELD_ORNAMENT_KIT,
  DRAGONBONE_NECKLACE,
  DRAGONFIRE_SHIELD,
  DRAGONFIRE_SHIELD_11284,
  DRAGONFIRE_WARD,
  DRAGONFIRE_WARD_22003,
  ELDRITCH_NIGHTMARE_STAFF,
  ELDRITCH_ORB,
  ELIDINIS_WARD,
  ELIDINIS_WARD_F,
  ELIDINIS_WARD_OR,
  ELITE_VOID_ROBE_L,
  ELITE_VOID_ROBE_LOR, ELITE_VOID_ROBE_OR,
  ELITE_VOID_TOP_L,
  ELITE_VOID_TOP_LOR, ELITE_VOID_TOP_OR,
  ENSOULED_ABYSSAL_HEAD,
  ENSOULED_ABYSSAL_HEAD_13508,
  ENSOULED_AVIANSIE_HEAD,
  ENSOULED_AVIANSIE_HEAD_13505,
  ENSOULED_BEAR_HEAD,
  ENSOULED_BEAR_HEAD_13463,
  ENSOULED_BLOODVELD_HEAD,
  ENSOULED_BLOODVELD_HEAD_13496,
  ENSOULED_CHAOS_DRUID_HEAD,
  ENSOULED_CHAOS_DRUID_HEAD_13472,
  ENSOULED_DAGANNOTH_HEAD,
  ENSOULED_DAGANNOTH_HEAD_13493,
  ENSOULED_DEMON_HEAD,
  ENSOULED_DEMON_HEAD_13502,
  ENSOULED_DOG_HEAD,
  ENSOULED_DOG_HEAD_13469,
  ENSOULED_DRAGON_HEAD,
  ENSOULED_DRAGON_HEAD_13511,
  ENSOULED_ELF_HEAD,
  ENSOULED_ELF_HEAD_13481,
  ENSOULED_GIANT_HEAD,
  ENSOULED_GIANT_HEAD_13475, ENSOULED_GOBLIN_HEAD, ENSOULED_GOBLIN_HEAD_13448,
  ENSOULED_HELLHOUND_HEAD,
  ENSOULED_HELLHOUND_HEAD_26997,
  ENSOULED_HORROR_HEAD,
  ENSOULED_HORROR_HEAD_13487, ENSOULED_IMP_HEAD, ENSOULED_IMP_HEAD_13454,
  ENSOULED_KALPHITE_HEAD,
  ENSOULED_KALPHITE_HEAD_13490,
  ENSOULED_MINOTAUR_HEAD, ENSOULED_MINOTAUR_HEAD_13457, ENSOULED_MONKEY_HEAD, ENSOULED_MONKEY_HEAD_13451,
  ENSOULED_OGRE_HEAD,
  ENSOULED_OGRE_HEAD_13478,
  ENSOULED_SCORPION_HEAD,
  ENSOULED_SCORPION_HEAD_13460,
  ENSOULED_TROLL_HEAD,
  ENSOULED_TROLL_HEAD_13484,
  ENSOULED_TZHAAR_HEAD,
  ENSOULED_TZHAAR_HEAD_13499,
  ENSOULED_UNICORN_HEAD,
  ENSOULED_UNICORN_HEAD_13466,
  FEROCIOUS_GLOVES,
  FIGHTER_HAT_L,
  FIGHTER_TORSO_L,
  FIRE_CAPE_L,
  FIRE_MAX_CAPE_L,
  FROZEN_ABYSSAL_WHIP, FURY_ORNAMENT_KIT,
  GAMES_NECKLACE1,
  GAMES_NECKLACE2,
  GAMES_NECKLACE3,
  GAMES_NECKLACE4,
  GAMES_NECKLACE5,
  GAMES_NECKLACE6,
  GAMES_NECKLACE7,
  GAMES_NECKLACE8,
  GHRAZI_RAPIER,
  GOLDEN_NUGGET,
  GRACEFUL_BOOTS,
  GRACEFUL_BOOTS_25084,
  GRACEFUL_CAPE,
  GRACEFUL_CAPE_25072,
  GRACEFUL_GLOVES,
  GRACEFUL_GLOVES_25081,
  GRACEFUL_HOOD,
  GRACEFUL_HOOD_25069,
  GRACEFUL_LEGS,
  GRACEFUL_LEGS_25078,
  GRACEFUL_TOP,
  GRACEFUL_TOP_25075,
  GRANITE_MAUL,
  GRANITE_MAUL_12848,
  GRANITE_RING,
  GRANITE_RING_I, GUTHANS_CHAINSKIRT, GUTHANS_CHAINSKIRT_100, GUTHANS_CHAINSKIRT_25, GUTHANS_CHAINSKIRT_50, GUTHANS_CHAINSKIRT_75, GUTHANS_HELM, GUTHANS_HELM_100, GUTHANS_HELM_25, GUTHANS_HELM_50, GUTHANS_HELM_75, GUTHANS_PLATEBODY, GUTHANS_PLATEBODY_100, GUTHANS_PLATEBODY_25, GUTHANS_PLATEBODY_50, GUTHANS_PLATEBODY_75, GUTHANS_WARSPEAR, GUTHANS_WARSPEAR_100, GUTHANS_WARSPEAR_25, GUTHANS_WARSPEAR_50, GUTHANS_WARSPEAR_75,
  GUTHIX_HALO_L,
  HARMONISED_NIGHTMARE_STAFF,
  HARMONISED_ORB,
  HEALER_HAT_L,
  HELM_OF_NEITIZNOT, HOLY_BOOK_OR,
  HOLY_GHRAZI_RAPIER,
  HOLY_SANGUINESTI_STAFF,
  HOLY_SANGUINESTI_STAFF_UNCHARGED,
  HOLY_SCYTHE_OF_VITUR,
  HOLY_SCYTHE_OF_VITUR_UNCHARGED,
  HYDRA_LEATHER,
  HYDRA_TAIL,
  IMBUED_GUTHIX_CAPE_L,
  IMBUED_GUTHIX_MAX_CAPE_L,
  IMBUED_SARADOMIN_CAPE_L,
  IMBUED_SARADOMIN_MAX_CAPE_L,
  IMBUED_ZAMORAK_CAPE_L,
  IMBUED_ZAMORAK_MAX_CAPE_L, INFERNAL_AXE, INFERNAL_AXE_OR, INFERNAL_AXE_UNCHARGED, INFERNAL_AXE_UNCHARGED_25371,
  INFERNAL_CAPE_L, INFERNAL_HARPOON, INFERNAL_HARPOON_OR, INFERNAL_HARPOON_UNCHARGED, INFERNAL_HARPOON_UNCHARGED_25367,
  INFERNAL_MAX_CAPE_L, INFERNAL_PICKAXE, INFERNAL_PICKAXE_OR, INFERNAL_PICKAXE_UNCHARGED, INFERNAL_PICKAXE_UNCHARGED_25369,
  INFINITY_BOTTOMS,
  INFINITY_BOTTOMS_20575,
  INFINITY_HAT,
  INFINITY_TOP,
  INFINITY_TOP_20574,
  IRON_DEFENDER_L, KARILS_COIF, KARILS_COIF_100, KARILS_COIF_25, KARILS_COIF_50, KARILS_COIF_75, KARILS_CROSSBOW, KARILS_CROSSBOW_100, KARILS_CROSSBOW_25, KARILS_CROSSBOW_50, KARILS_CROSSBOW_75, KARILS_LEATHERSKIRT, KARILS_LEATHERSKIRT_100, KARILS_LEATHERSKIRT_25, KARILS_LEATHERSKIRT_50, KARILS_LEATHERSKIRT_75, KARILS_LEATHERTOP, KARILS_LEATHERTOP_100, KARILS_LEATHERTOP_25, KARILS_LEATHERTOP_50, KARILS_LEATHERTOP_75,
  KRAKEN_TENTACLE,
  LAVA_BATTLESTAFF,
  LAVA_BATTLESTAFF_21198,
  LIGHT_INFINITY_BOTTOMS,
  LIGHT_INFINITY_COLOUR_KIT,
  LIGHT_INFINITY_HAT,
  LIGHT_INFINITY_TOP,
  LONG_BONE,
  MAGIC_SHORTBOW,
  MAGIC_SHORTBOW_I,
  MAGIC_SHORTBOW_SCROLL,
  MAGMA_HELM,
  MAGMA_HELM_UNCHARGED,
  MALEDICTION_WARD,
  MALEDICTION_WARD_12806,
  MARK_OF_GRACE,
  MASORI_ASSEMBLER_L,
  MASORI_ASSEMBLER_MAX_CAPE_L,
  MASTER_SCROLL_BOOK,
  MASTER_SCROLL_BOOK_EMPTY,
  MITHRIL_DEFENDER_L, MYSTIC_BOOTS, MYSTIC_BOOTS_OR, MYSTIC_GLOVES, MYSTIC_GLOVES_OR, MYSTIC_HAT, MYSTIC_HAT_OR, MYSTIC_ROBE_BOTTOM, MYSTIC_ROBE_BOTTOM_OR, MYSTIC_ROBE_TOP, MYSTIC_ROBE_TOP_OR, NECKLACE_OF_ANGUISH, NECKLACE_OF_ANGUISH_OR,
  NEITIZNOT_FACEGUARD,
  NIGHTMARE_STAFF, OCCULT_NECKLACE, OCCULT_NECKLACE_OR, OCCULT_ORNAMENT_KIT,
  ODIUM_WARD,
  ODIUM_WARD_12807,
  OSMUMTENS_FANG,
  OSMUMTENS_FANG_OR,
  PENANCE_SKIRT_L,
  PERFECT_SHELL,
  PERFECT_SNAIL_SHELL,
  PHARAOHS_SCEPTRE,
  PHARAOHS_SCEPTRE_UNCHARGED,
  PROSPECTOR_BOOTS,
  PROSPECTOR_HELMET,
  PROSPECTOR_JACKET,
  PROSPECTOR_LEGS,
  RANGER_HAT_L,
  RING_OF_DUELING1,
  RING_OF_DUELING2,
  RING_OF_DUELING3,
  RING_OF_DUELING4,
  RING_OF_DUELING5,
  RING_OF_DUELING6,
  RING_OF_DUELING7,
  RING_OF_DUELING8,
  RING_OF_ENDURANCE,
  RING_OF_ENDURANCE_UNCHARGED_24844,
  RING_OF_SUFFERING,
  RING_OF_SUFFERING_I,
  RING_OF_THE_GODS,
  RING_OF_THE_GODS_I,
  RING_OF_WEALTH,
  RING_OF_WEALTH_1,
  RING_OF_WEALTH_I,
  RING_OF_WEALTH_I1,
  RING_OF_WEALTH_I2,
  RING_OF_WEALTH_I3,
  RING_OF_WEALTH_I4,
  RING_OF_WEALTH_I5,
  RING_OF_WEALTH_SCROLL, RUNE_CROSSBOW, RUNE_CROSSBOW_OR, RUNE_DEFENDER,
  RUNE_DEFENDER_L,
  RUNE_DEFENDER_LT, RUNE_DEFENDER_ORNAMENT_KIT, RUNE_DEFENDER_T,
  RUNE_POUCH_L, RUNE_SCIMITAR, RUNE_SCIMITAR_23330, RUNE_SCIMITAR_23332, RUNE_SCIMITAR_23334, RUNE_SCIMITAR_ORNAMENT_KIT_GUTHIX, RUNE_SCIMITAR_ORNAMENT_KIT_SARADOMIN, RUNE_SCIMITAR_ORNAMENT_KIT_ZAMORAK,
  RUNNER_HAT_L,
  SANGUINE_SCYTHE_OF_VITUR,
  SANGUINE_SCYTHE_OF_VITUR_UNCHARGED,
  SANGUINESTI_STAFF,
  SANGUINESTI_STAFF_UNCHARGED, SARADOMIN_GODSWORD, SARADOMIN_GODSWORD_OR, SARADOMIN_GODSWORD_ORNAMENT_KIT,
  SARADOMIN_HALO_L,
  SARADOMINS_BLESSED_SWORD,
  SARADOMINS_TEAR,
  SCYTHE_OF_VITUR,
  SCYTHE_OF_VITUR_UNCHARGED,
  SEERS_RING,
  SEERS_RING_I,
  SEREN_HALO_L,
  SERPENTINE_HELM,
  SERPENTINE_HELM_UNCHARGED, SHATTERED_CANNON_ORNAMENT_KIT, SHATTERED_RELICS_MYSTIC_ORNAMENT_KIT, SHATTERED_RELICS_VARIETY_ORNAMENT_KIT, SHATTERED_RELICS_VOID_ORNAMENT_KIT,
  SKILLS_NECKLACE,
  SKILLS_NECKLACE1,
  SKILLS_NECKLACE2,
  SKILLS_NECKLACE3,
  SKILLS_NECKLACE5,
  SLAYER_HELMET,
  SNAIL_SHELL,
  SOFT_CLAY,
  STEAM_BATTLESTAFF,
  STEAM_BATTLESTAFF_12795,
  STEEL_DEFENDER_L,
  TANZANITE_HELM,
  TANZANITE_HELM_UNCHARGED,
  TATTERED_MOON_PAGE,
  TATTERED_SUN_PAGE,
  TATTERED_TEMPLE_PAGE,
  THAMMARONS_SCEPTRE,
  THAMMARONS_SCEPTRE_U,
  TOME_OF_FIRE,
  TOME_OF_FIRE_EMPTY,
  TOME_OF_WATER,
  TOME_OF_WATER_EMPTY, TORAGS_HAMMERS, TORAGS_HAMMERS_100, TORAGS_HAMMERS_25, TORAGS_HAMMERS_50, TORAGS_HAMMERS_75, TORAGS_HELM, TORAGS_HELM_100, TORAGS_HELM_25, TORAGS_HELM_50, TORAGS_HELM_75, TORAGS_PLATEBODY, TORAGS_PLATEBODY_100, TORAGS_PLATEBODY_25, TORAGS_PLATEBODY_50, TORAGS_PLATEBODY_75, TORAGS_PLATELEGS, TORAGS_PLATELEGS_100, TORAGS_PLATELEGS_25, TORAGS_PLATELEGS_50, TORAGS_PLATELEGS_75, TORMENTED_BRACELET, TORMENTED_BRACELET_OR, TORMENTED_ORNAMENT_KIT,
  TORTOISE_SHELL, TORTURE_ORNAMENT_KIT,
  TOXIC_BLOWPIPE,
  TOXIC_BLOWPIPE_EMPTY,
  TOXIC_STAFF_OF_THE_DEAD,
  TOXIC_STAFF_UNCHARGED,
  TRAILBLAZER_GRACEFUL_ORNAMENT_KIT, TRAILBLAZER_TOOL_ORNAMENT_KIT,
  TREASONOUS_RING,
  TREASONOUS_RING_I,
  TRIDENT_OF_THE_SEAS,
  TRIDENT_OF_THE_SEAS_E,
  TRIDENT_OF_THE_SWAMP,
  TRIDENT_OF_THE_SWAMP_E,
  TROUVER_PARCHMENT,
  TUMEKENS_SHADOW,
  TUMEKENS_SHADOW_UNCHARGED,
  TWISTED_ANCESTRAL_HAT,
  TWISTED_ANCESTRAL_ROBE_BOTTOM,
  TWISTED_ANCESTRAL_ROBE_TOP,
  TWISTED_HORNS,
  TWISTED_SLAYER_HELMET,
  TWISTED_SLAYER_HELMET_I,
  TWISTED_SLAYER_HELMET_I_25191,
  TWISTED_SLAYER_HELMET_I_26681,
  TYRANNICAL_RING,
  TYRANNICAL_RING_I,
  TZHAARKETOM,
  TZHAARKETOM_ORNAMENT_KIT,
  TZHAARKETOM_T,
  UNCHARGED_TOXIC_TRIDENT,
  UNCHARGED_TOXIC_TRIDENT_E,
  UNCHARGED_TRIDENT,
  UNCHARGED_TRIDENT_E, UNHOLY_BOOK_OR,
  UNIDENTIFIED_MINERALS,
  URSINE_CHAINMACE,
  URSINE_CHAINMACE_U,
  VENATOR_BOW,
  VENATOR_BOW_UNCHARGED, VERACS_BRASSARD, VERACS_BRASSARD_100, VERACS_BRASSARD_25, VERACS_BRASSARD_50, VERACS_BRASSARD_75, VERACS_FLAIL, VERACS_FLAIL_100, VERACS_FLAIL_25, VERACS_FLAIL_50, VERACS_FLAIL_75, VERACS_HELM, VERACS_HELM_100, VERACS_HELM_25, VERACS_HELM_50, VERACS_HELM_75, VERACS_PLATESKIRT, VERACS_PLATESKIRT_100, VERACS_PLATESKIRT_25, VERACS_PLATESKIRT_50, VERACS_PLATESKIRT_75,
  VIGGORAS_CHAINMACE,
  VIGGORAS_CHAINMACE_U,
  VOID_KNIGHT_GLOVES_L,
  VOID_KNIGHT_GLOVES_LOR, VOID_KNIGHT_GLOVES_OR,
  VOID_KNIGHT_MACE_L,
  VOID_KNIGHT_ROBE_L,
  VOID_KNIGHT_ROBE_LOR, VOID_KNIGHT_ROBE_OR,
  VOID_KNIGHT_TOP_L,
  VOID_KNIGHT_TOP_LOR, VOID_KNIGHT_TOP_OR,
  VOID_MAGE_HELM_L,
  VOID_MAGE_HELM_LOR, VOID_MAGE_HELM_OR,
  VOID_MELEE_HELM_L,
  VOID_MELEE_HELM_LOR, VOID_MELEE_HELM_OR,
  VOID_RANGER_HELM_L,
  VOID_RANGER_HELM_LOR, VOID_RANGER_HELM_OR,
  VOLATILE_NIGHTMARE_STAFF,
  VOLATILE_ORB,
  VOLCANIC_ABYSSAL_WHIP,
  WARRIOR_RING,
  WARRIOR_RING_I,
  WEBWEAVER_BOW,
  WEBWEAVER_BOW_U, ZALCANO_SHARD, ZAMORAK_GODSWORD, ZAMORAK_GODSWORD_OR, ZAMORAK_GODSWORD_ORNAMENT_KIT,
  ZAMORAK_HALO_L
} from "./item-constants";
import * as variations from './item-variations.json';

let invertedVariations = {};

Object.keys(variations).forEach(key => {
    if (key === 'default') {
        return;
    }

    variations[key].forEach(variation => {
        variations[key].forEach(id => {
            invertedVariations[variation] = invertedVariations[variation] || [];
            invertedVariations[variation].push(id);
        });
    });
});

class ItemMapping {
  constructor(tradeableItem, ...untradableItems) {
    this.quantity = 1;
    this.includeVariations = false;

    if (typeof untradableItems[0] === 'boolean') {
      this.includeVariations = untradableItems[0];
      this.quantity = untradableItems[1];
      untradableItems = untradableItems.slice(2);
    }

    if (typeof untradableItems[0] === 'boolean') {
      this.includeVariations = untradableItems[0];
      this.quantity = untradableItems[1];
      untradableItems = untradableItems.slice(2);
    }

    this.tradeableItem = tradeableItem;
    this.untradableItems = untradableItems;
  }
}

// Barrows equipment
ItemMapping.ITEM_AHRIMS_HOOD = new ItemMapping(AHRIMS_HOOD, AHRIMS_HOOD_25, AHRIMS_HOOD_50, AHRIMS_HOOD_75, AHRIMS_HOOD_100);
ItemMapping.ITEM_AHRIMS_ROBETOP = new ItemMapping(AHRIMS_ROBETOP, AHRIMS_ROBETOP_25, AHRIMS_ROBETOP_50, AHRIMS_ROBETOP_75, AHRIMS_ROBETOP_100);
ItemMapping.ITEM_AHRIMS_ROBEBOTTOM = new ItemMapping(AHRIMS_ROBESKIRT, AHRIMS_ROBESKIRT_25, AHRIMS_ROBESKIRT_50, AHRIMS_ROBESKIRT_75, AHRIMS_ROBESKIRT_100);
ItemMapping.ITEM_AHRIMS_STAFF = new ItemMapping(AHRIMS_STAFF, AHRIMS_STAFF_25, AHRIMS_STAFF_50, AHRIMS_STAFF_75, AHRIMS_STAFF_100);
ItemMapping.ITEM_KARILS_COIF = new ItemMapping(KARILS_COIF, KARILS_COIF_25, KARILS_COIF_50, KARILS_COIF_75, KARILS_COIF_100);
ItemMapping.ITEM_KARILS_LEATHERTOP = new ItemMapping(KARILS_LEATHERTOP, KARILS_LEATHERTOP_25, KARILS_LEATHERTOP_50, KARILS_LEATHERTOP_75, KARILS_LEATHERTOP_100);
ItemMapping.ITEM_KARILS_LEATHERSKIRT = new ItemMapping(KARILS_LEATHERSKIRT, KARILS_LEATHERSKIRT_25, KARILS_LEATHERSKIRT_50, KARILS_LEATHERSKIRT_75, KARILS_LEATHERSKIRT_100);
ItemMapping.ITEM_KARILS_CROSSBOW = new ItemMapping(KARILS_CROSSBOW, KARILS_CROSSBOW_25, KARILS_CROSSBOW_50, KARILS_CROSSBOW_75, KARILS_CROSSBOW_100);
ItemMapping.ITEM_DHAROKS_HELM = new ItemMapping(DHAROKS_HELM, DHAROKS_HELM_25, DHAROKS_HELM_50, DHAROKS_HELM_75, DHAROKS_HELM_100);
ItemMapping.ITEM_DHAROKS_PLATEBODY = new ItemMapping(DHAROKS_PLATEBODY, DHAROKS_PLATEBODY_25, DHAROKS_PLATEBODY_50, DHAROKS_PLATEBODY_75, DHAROKS_PLATEBODY_100);
ItemMapping.ITEM_DHAROKS_PLATELEGS = new ItemMapping(DHAROKS_PLATELEGS, DHAROKS_PLATELEGS_25, DHAROKS_PLATELEGS_50, DHAROKS_PLATELEGS_75, DHAROKS_PLATELEGS_100);
ItemMapping.ITEM_DHARKS_GREATEAXE = new ItemMapping(DHAROKS_GREATAXE, DHAROKS_GREATAXE_25, DHAROKS_GREATAXE_50, DHAROKS_GREATAXE_75, DHAROKS_GREATAXE_100);
ItemMapping.ITEM_GUTHANS_HELM = new ItemMapping(GUTHANS_HELM, GUTHANS_HELM_25, GUTHANS_HELM_50, GUTHANS_HELM_75, GUTHANS_HELM_100);
ItemMapping.ITEM_GUTHANS_PLATEBODY = new ItemMapping(GUTHANS_PLATEBODY, GUTHANS_PLATEBODY_25, GUTHANS_PLATEBODY_50, GUTHANS_PLATEBODY_75, GUTHANS_PLATEBODY_100);
ItemMapping.ITEM_GUTHANS_CHAINSKIRT = new ItemMapping(GUTHANS_CHAINSKIRT, GUTHANS_CHAINSKIRT_25, GUTHANS_CHAINSKIRT_50, GUTHANS_CHAINSKIRT_75, GUTHANS_CHAINSKIRT_100);
ItemMapping.ITEM_GUTHANS_WARSPEAR = new ItemMapping(GUTHANS_WARSPEAR, GUTHANS_WARSPEAR_25, GUTHANS_WARSPEAR_50, GUTHANS_WARSPEAR_75, GUTHANS_WARSPEAR_100);
ItemMapping.ITEM_TORAGS_HELM = new ItemMapping(TORAGS_HELM, TORAGS_HELM_25, TORAGS_HELM_50, TORAGS_HELM_75, TORAGS_HELM_100);
ItemMapping.ITEM_TORAGS_PLATEBODY = new ItemMapping(TORAGS_PLATEBODY, TORAGS_PLATEBODY_25, TORAGS_PLATEBODY_50, TORAGS_PLATEBODY_75, TORAGS_PLATEBODY_100);
ItemMapping.ITEM_TORAGS_PLATELEGS = new ItemMapping(TORAGS_PLATELEGS, TORAGS_PLATELEGS_25, TORAGS_PLATELEGS_50, TORAGS_PLATELEGS_75, TORAGS_PLATELEGS_100);
ItemMapping.ITEM_TORAGS_HAMMERS = new ItemMapping(TORAGS_HAMMERS, TORAGS_HAMMERS_25, TORAGS_HAMMERS_50, TORAGS_HAMMERS_75, TORAGS_HAMMERS_100);
ItemMapping.ITEM_VERACS_HELM = new ItemMapping(VERACS_HELM, VERACS_HELM_25, VERACS_HELM_50, VERACS_HELM_75, VERACS_HELM_100);
ItemMapping.ITEM_VERACS_BRASSARD = new ItemMapping(VERACS_BRASSARD, VERACS_BRASSARD_25, VERACS_BRASSARD_50, VERACS_BRASSARD_75, VERACS_BRASSARD_100);
ItemMapping.ITEM_VERACS_PLATESKIRT = new ItemMapping(VERACS_PLATESKIRT, VERACS_PLATESKIRT_25, VERACS_PLATESKIRT_50, VERACS_PLATESKIRT_75, VERACS_PLATESKIRT_100);
ItemMapping.ITEM_VERACS_FLAIL = new ItemMapping(VERACS_FLAIL, VERACS_FLAIL_25, VERACS_FLAIL_50, VERACS_FLAIL_75, VERACS_FLAIL_100);

// Dragon equipment ornament kits
ItemMapping.ITEM_DRAGON_SCIMITAR = new ItemMapping(DRAGON_SCIMITAR, DRAGON_SCIMITAR_OR);
ItemMapping.ITEM_DRAGON_SCIMITAR_ORNAMENT_KIT = new ItemMapping(DRAGON_SCIMITAR_ORNAMENT_KIT, DRAGON_SCIMITAR_OR);
ItemMapping.ITEM_DRAGON_DEFENDER = new ItemMapping(DRAGON_DEFENDER_ORNAMENT_KIT, DRAGON_DEFENDER_T);
ItemMapping.ITEM_DRAGON_PICKAXE = new ItemMapping(DRAGON_PICKAXE, DRAGON_PICKAXE_12797, DRAGON_PICKAXE_OR, DRAGON_PICKAXE_OR_25376);
ItemMapping.ITEM_DRAGON_PICKAXE_OR = new ItemMapping(ZALCANO_SHARD, DRAGON_PICKAXE_OR);
ItemMapping.ITEM_DRAGON_AXE = new ItemMapping(DRAGON_AXE, DRAGON_AXE_OR);
ItemMapping.ITEM_DRAGON_HARPOON = new ItemMapping(DRAGON_HARPOON, DRAGON_HARPOON_OR);
ItemMapping.ITEM_INFERNAL_PICKAXE_OR = new ItemMapping(INFERNAL_PICKAXE, INFERNAL_PICKAXE_OR);
ItemMapping.ITEM_INFERNAL_PICKAXE_OR_UNCHARGED = new ItemMapping(INFERNAL_PICKAXE_UNCHARGED, INFERNAL_PICKAXE_UNCHARGED_25369);
ItemMapping.ITEM_INFERNAL_AXE_OR = new ItemMapping(INFERNAL_AXE, INFERNAL_AXE_OR);
ItemMapping.ITEM_INFERNAL_AXE_OR_UNCHARGED = new ItemMapping(INFERNAL_AXE_UNCHARGED, INFERNAL_AXE_UNCHARGED_25371);
ItemMapping.ITEM_INFERNAL_HARPOON_OR = new ItemMapping(INFERNAL_HARPOON, INFERNAL_HARPOON_OR);
ItemMapping.ITEM_INFERNAL_HARPOON_OR_UNCHARGED = new ItemMapping(INFERNAL_HARPOON_UNCHARGED, INFERNAL_HARPOON_UNCHARGED_25367);
ItemMapping.ITEM_TRAILBLAZER_TOOL_ORNAMENT_KIT = new ItemMapping(TRAILBLAZER_TOOL_ORNAMENT_KIT, DRAGON_PICKAXE_OR_25376, DRAGON_AXE_OR, DRAGON_HARPOON_OR, INFERNAL_PICKAXE_OR, INFERNAL_AXE_OR, INFERNAL_HARPOON_OR, INFERNAL_PICKAXE_UNCHARGED_25369, INFERNAL_AXE_UNCHARGED_25371, INFERNAL_HARPOON_UNCHARGED_25367);
ItemMapping.ITEM_DRAGON_KITESHIELD = new ItemMapping(DRAGON_KITESHIELD, DRAGON_KITESHIELD_G);
ItemMapping.ITEM_DRAGON_KITESHIELD_ORNAMENT_KIT = new ItemMapping(DRAGON_KITESHIELD_ORNAMENT_KIT, DRAGON_KITESHIELD_G);
ItemMapping.ITEM_DRAGON_FULL_HELM = new ItemMapping(DRAGON_FULL_HELM, DRAGON_FULL_HELM_G);
ItemMapping.ITEM_DRAGON_FULL_HELM_ORNAMENT_KIT = new ItemMapping(DRAGON_FULL_HELM_ORNAMENT_KIT, DRAGON_FULL_HELM_G);
ItemMapping.ITEM_DRAGON_CHAINBODY = new ItemMapping(DRAGON_CHAINBODY_3140, DRAGON_CHAINBODY_G);
ItemMapping.ITEM_DRAGON_CHAINBODY_ORNAMENT_KIT = new ItemMapping(DRAGON_CHAINBODY_ORNAMENT_KIT, DRAGON_CHAINBODY_G);
ItemMapping.ITEM_DRAGON_PLATEBODY = new ItemMapping(DRAGON_PLATEBODY, DRAGON_PLATEBODY_G);
ItemMapping.ITEM_DRAGON_PLATEBODY_ORNAMENT_KIT = new ItemMapping(DRAGON_PLATEBODY_ORNAMENT_KIT, DRAGON_PLATEBODY_G);
ItemMapping.ITEM_DRAGON_PLATESKIRT = new ItemMapping(DRAGON_PLATESKIRT, DRAGON_PLATESKIRT_G);
ItemMapping.ITEM_DRAGON_SKIRT_ORNAMENT_KIT = new ItemMapping(DRAGON_LEGSSKIRT_ORNAMENT_KIT, DRAGON_PLATESKIRT_G);
ItemMapping.ITEM_DRAGON_PLATELEGS = new ItemMapping(DRAGON_PLATELEGS, DRAGON_PLATELEGS_G);
ItemMapping.ITEM_DRAGON_LEGS_ORNAMENT_KIT = new ItemMapping(DRAGON_LEGSSKIRT_ORNAMENT_KIT, DRAGON_PLATELEGS_G);
ItemMapping.ITEM_DRAGON_SQ_SHIELD = new ItemMapping(DRAGON_SQ_SHIELD, DRAGON_SQ_SHIELD_G);
ItemMapping.ITEM_DRAGON_SQ_SHIELD_ORNAMENT_KIT = new ItemMapping(DRAGON_SQ_SHIELD_ORNAMENT_KIT, DRAGON_SQ_SHIELD_G);
ItemMapping.ITEM_DRAGON_BOOTS = new ItemMapping(DRAGON_BOOTS, DRAGON_BOOTS_G);
ItemMapping.ITEM_DRAGON_BOOTS_ORNAMENT_KIT = new ItemMapping(DRAGON_BOOTS_ORNAMENT_KIT, DRAGON_BOOTS_G);

// Rune ornament kits
ItemMapping.ITEM_RUNE_SCIMITAR_GUTHIX = new ItemMapping(RUNE_SCIMITAR, RUNE_SCIMITAR_23330);
ItemMapping.ITEM_RUNE_SCIMITAR_ORNAMENT_KIT_GUTHIX = new ItemMapping(RUNE_SCIMITAR_ORNAMENT_KIT_GUTHIX, RUNE_SCIMITAR_23330);
ItemMapping.ITEM_RUNE_SCIMITAR_SARADOMIN = new ItemMapping(RUNE_SCIMITAR, RUNE_SCIMITAR_23332);
ItemMapping.ITEM_RUNE_SCIMITAR_ORNAMENT_KIT_SARADOMIN = new ItemMapping(RUNE_SCIMITAR_ORNAMENT_KIT_SARADOMIN, RUNE_SCIMITAR_23332);
ItemMapping.ITEM_RUNE_SCIMITAR_ZAMORAK = new ItemMapping(RUNE_SCIMITAR, RUNE_SCIMITAR_23334);
ItemMapping.ITEM_RUNE_SCIMITAR_ORNAMENT_KIT_ZAMORAK = new ItemMapping(RUNE_SCIMITAR_ORNAMENT_KIT_ZAMORAK, RUNE_SCIMITAR_23334);
ItemMapping.ITEM_RUNE_DEFENDER = new ItemMapping(RUNE_DEFENDER, RUNE_DEFENDER_T, RUNE_DEFENDER_LT);
ItemMapping.ITEM_RUNE_DEFENDER_ORNAMENT_KIT = new ItemMapping(RUNE_DEFENDER_ORNAMENT_KIT, RUNE_DEFENDER_T, RUNE_DEFENDER_LT);
ItemMapping.ITEM_RUNE_CROSSBOW = new ItemMapping(RUNE_CROSSBOW, RUNE_CROSSBOW_OR);

// Godsword ornament kits
ItemMapping.ITEM_ARMADYL_GODSWORD = new ItemMapping(ARMADYL_GODSWORD, ARMADYL_GODSWORD_OR);
ItemMapping.ITEM_ARMADYL_GODSWORD_ORNAMENT_KIT = new ItemMapping(ARMADYL_GODSWORD_ORNAMENT_KIT, ARMADYL_GODSWORD_OR);
ItemMapping.ITEM_BANDOS_GODSWORD = new ItemMapping(BANDOS_GODSWORD, BANDOS_GODSWORD_OR);
ItemMapping.ITEM_BANDOS_GODSWORD_ORNAMENT_KIT = new ItemMapping(BANDOS_GODSWORD_ORNAMENT_KIT, BANDOS_GODSWORD_OR);
ItemMapping.ITEM_ZAMORAK_GODSWORD = new ItemMapping(ZAMORAK_GODSWORD, ZAMORAK_GODSWORD_OR);
ItemMapping.ITEM_ZAMORAK_GODSWORD_ORNAMENT_KIT = new ItemMapping(ZAMORAK_GODSWORD_ORNAMENT_KIT, ZAMORAK_GODSWORD_OR);
ItemMapping.ITEM_SARADOMIN_GODSWORD = new ItemMapping(SARADOMIN_GODSWORD, SARADOMIN_GODSWORD_OR);
ItemMapping.ITEM_SARADOMIN_GODSWORD_ORNAMENT_KIT = new ItemMapping(SARADOMIN_GODSWORD_ORNAMENT_KIT, SARADOMIN_GODSWORD_OR);

// Jewellery ornament kits
ItemMapping.ITEM_AMULET_OF_TORTURE = new ItemMapping(AMULET_OF_TORTURE, AMULET_OF_TORTURE_OR);
ItemMapping.ITEM_TORTURE_ORNAMENT_KIT = new ItemMapping(TORTURE_ORNAMENT_KIT, AMULET_OF_TORTURE_OR);
ItemMapping.ITEM_NECKLACE_OF_ANGUISH = new ItemMapping(NECKLACE_OF_ANGUISH, NECKLACE_OF_ANGUISH_OR);
ItemMapping.ITEM_ANGUISH_ORNAMENT_KIT = new ItemMapping(ANGUISH_ORNAMENT_KIT, NECKLACE_OF_ANGUISH_OR);
ItemMapping.ITEM_OCCULT_NECKLACE = new ItemMapping(OCCULT_NECKLACE, OCCULT_NECKLACE_OR);
ItemMapping.ITEM_OCCULT_ORNAMENT_KIT = new ItemMapping(OCCULT_ORNAMENT_KIT, OCCULT_NECKLACE_OR);
ItemMapping.ITEM_AMULET_OF_FURY = new ItemMapping(AMULET_OF_FURY, AMULET_OF_FURY_OR, AMULET_OF_BLOOD_FURY);
ItemMapping.ITEM_FURY_ORNAMENT_KIT = new ItemMapping(FURY_ORNAMENT_KIT, AMULET_OF_FURY_OR);
ItemMapping.ITEM_TORMENTED_BRACELET = new ItemMapping(TORMENTED_BRACELET, TORMENTED_BRACELET_OR);
ItemMapping.ITEM_TORMENTED_ORNAMENT_KIT = new ItemMapping(TORMENTED_ORNAMENT_KIT, TORMENTED_BRACELET_OR);
ItemMapping.ITEM_BERSERKER_NECKLACE = new ItemMapping(BERSERKER_NECKLACE, BERSERKER_NECKLACE_OR);
ItemMapping.ITEM_BERSERKER_NECKLACE_ORNAMENT_KIT = new ItemMapping(BERSERKER_NECKLACE_ORNAMENT_KIT, BERSERKER_NECKLACE_OR);

// Other ornament kits
ItemMapping.ITEM_SHATTERED_RELICS_VARIETY_ORNAMENT_KIT = new ItemMapping(SHATTERED_RELICS_VARIETY_ORNAMENT_KIT, RUNE_CROSSBOW_OR, ABYSSAL_TENTACLE_OR, ABYSSAL_WHIP_OR, BOOK_OF_BALANCE_OR, BOOK_OF_DARKNESS_OR, BOOK_OF_LAW_OR, BOOK_OF_WAR_OR, HOLY_BOOK_OR, UNHOLY_BOOK_OR);
ItemMapping.ITEM_SHATTERED_RELICS_VOID_ORNAMENT_KIT = new ItemMapping(SHATTERED_RELICS_VOID_ORNAMENT_KIT, ELITE_VOID_TOP_OR, ELITE_VOID_ROBE_OR, VOID_KNIGHT_TOP_OR, VOID_KNIGHT_ROBE_OR, VOID_KNIGHT_GLOVES_OR, VOID_MAGE_HELM_OR, VOID_MELEE_HELM_OR, VOID_RANGER_HELM_OR, VOID_KNIGHT_TOP_LOR, VOID_KNIGHT_ROBE_LOR, VOID_KNIGHT_GLOVES_LOR, ELITE_VOID_TOP_LOR, ELITE_VOID_ROBE_LOR, VOID_MAGE_HELM_LOR, VOID_RANGER_HELM_LOR, VOID_MELEE_HELM_LOR);
ItemMapping.ITEM_MYSTIC_BOOTS = new ItemMapping(MYSTIC_BOOTS, MYSTIC_BOOTS_OR);
ItemMapping.ITEM_MYSTIC_GLOVES = new ItemMapping(MYSTIC_GLOVES, MYSTIC_GLOVES_OR);
ItemMapping.ITEM_MYSTIC_HAT = new ItemMapping(MYSTIC_HAT, MYSTIC_HAT_OR);
ItemMapping.ITEM_MYSTIC_ROBE_BOTTOM = new ItemMapping(MYSTIC_ROBE_BOTTOM, MYSTIC_ROBE_BOTTOM_OR);
ItemMapping.ITEM_MYSTIC_ROBE_TOP = new ItemMapping(MYSTIC_ROBE_TOP, MYSTIC_ROBE_TOP_OR);
ItemMapping.ITEM_SHATTERED_RELICS_MYSTIC_ORNAMENT_KIT = new ItemMapping(SHATTERED_RELICS_MYSTIC_ORNAMENT_KIT, MYSTIC_BOOTS_OR, MYSTIC_GLOVES_OR, MYSTIC_HAT_OR, MYSTIC_ROBE_BOTTOM_OR, MYSTIC_ROBE_TOP_OR);
ItemMapping.ITEM_CANNON_BARRELS = new ItemMapping(CANNON_BARRELS, CANNON_BARRELS_OR);
ItemMapping.ITEM_CANNON_BASE = new ItemMapping(CANNON_BASE, CANNON_BASE_OR);
ItemMapping.ITEM_CANNON_FURNACE = new ItemMapping(CANNON_FURNACE, CANNON_FURNACE_OR);
ItemMapping.ITEM_CANNON_STAND = new ItemMapping(CANNON_STAND, CANNON_STAND_OR);
ItemMapping.ITEM_SHATTERED_CANNON_ORNAMENT_KIT = new ItemMapping(SHATTERED_CANNON_ORNAMENT_KIT, CANNON_BARRELS_OR, CANNON_BASE_OR, CANNON_FURNACE_OR, CANNON_STAND_OR);

// Ensouled heads
ItemMapping.ITEM_ENSOULED_GOBLIN_HEAD = new ItemMapping(ENSOULED_GOBLIN_HEAD_13448, ENSOULED_GOBLIN_HEAD);
ItemMapping.ITEM_ENSOULED_MONKEY_HEAD = new ItemMapping(ENSOULED_MONKEY_HEAD_13451, ENSOULED_MONKEY_HEAD);
ItemMapping.ITEM_ENSOULED_IMP_HEAD = new ItemMapping(ENSOULED_IMP_HEAD_13454, ENSOULED_IMP_HEAD);
ItemMapping.ITEM_ENSOULED_MINOTAUR_HEAD = new ItemMapping(ENSOULED_MINOTAUR_HEAD_13457, ENSOULED_MINOTAUR_HEAD);
ItemMapping.ITEM_ENSOULED_SCORPION_HEAD = new ItemMapping(ENSOULED_SCORPION_HEAD_13460, ENSOULED_SCORPION_HEAD);
ItemMapping.ITEM_ENSOULED_BEAR_HEAD = new ItemMapping(ENSOULED_BEAR_HEAD_13463, ENSOULED_BEAR_HEAD);
ItemMapping.ITEM_ENSOULED_UNICORN_HEAD = new ItemMapping(ENSOULED_UNICORN_HEAD_13466, ENSOULED_UNICORN_HEAD);
ItemMapping.ITEM_ENSOULED_DOG_HEAD = new ItemMapping(ENSOULED_DOG_HEAD_13469, ENSOULED_DOG_HEAD);
ItemMapping.ITEM_ENSOULED_CHAOS_DRUID_HEAD = new ItemMapping(ENSOULED_CHAOS_DRUID_HEAD_13472, ENSOULED_CHAOS_DRUID_HEAD);
ItemMapping.ITEM_ENSOULED_GIANT_HEAD = new ItemMapping(ENSOULED_GIANT_HEAD_13475, ENSOULED_GIANT_HEAD);
ItemMapping.ITEM_ENSOULED_OGRE_HEAD = new ItemMapping(ENSOULED_OGRE_HEAD_13478, ENSOULED_OGRE_HEAD);
ItemMapping.ITEM_ENSOULED_ELF_HEAD = new ItemMapping(ENSOULED_ELF_HEAD_13481, ENSOULED_ELF_HEAD);
ItemMapping.ITEM_ENSOULED_TROLL_HEAD = new ItemMapping(ENSOULED_TROLL_HEAD_13484, ENSOULED_TROLL_HEAD);
ItemMapping.ITEM_ENSOULED_HORROR_HEAD = new ItemMapping(ENSOULED_HORROR_HEAD_13487, ENSOULED_HORROR_HEAD);
ItemMapping.ITEM_ENSOULED_KALPHITE_HEAD = new ItemMapping(ENSOULED_KALPHITE_HEAD_13490, ENSOULED_KALPHITE_HEAD);
ItemMapping.ITEM_ENSOULED_DAGANNOTH_HEAD = new ItemMapping(ENSOULED_DAGANNOTH_HEAD_13493, ENSOULED_DAGANNOTH_HEAD);
ItemMapping.ITEM_ENSOULED_BLOODVELD_HEAD = new ItemMapping(ENSOULED_BLOODVELD_HEAD_13496, ENSOULED_BLOODVELD_HEAD);
ItemMapping.ITEM_ENSOULED_TZHAAR_HEAD = new ItemMapping(ENSOULED_TZHAAR_HEAD_13499, ENSOULED_TZHAAR_HEAD);
ItemMapping.ITEM_ENSOULED_DEMON_HEAD = new ItemMapping(ENSOULED_DEMON_HEAD_13502, ENSOULED_DEMON_HEAD);
ItemMapping.ITEM_ENSOULED_HELLHOUND_HEAD = new ItemMapping(ENSOULED_HELLHOUND_HEAD_26997, ENSOULED_HELLHOUND_HEAD);
ItemMapping.ITEM_ENSOULED_AVIANSIE_HEAD = new ItemMapping(ENSOULED_AVIANSIE_HEAD_13505, ENSOULED_AVIANSIE_HEAD);
ItemMapping.ITEM_ENSOULED_ABYSSAL_HEAD = new ItemMapping(ENSOULED_ABYSSAL_HEAD_13508, ENSOULED_ABYSSAL_HEAD);
ItemMapping.ITEM_ENSOULED_DRAGON_HEAD = new ItemMapping(ENSOULED_DRAGON_HEAD_13511, ENSOULED_DRAGON_HEAD);

// Imbued rings
ItemMapping.ITEM_BERSERKER_RING = new ItemMapping(BERSERKER_RING, true, 1, BERSERKER_RING_I);
ItemMapping.ITEM_SEERS_RING = new ItemMapping(SEERS_RING, true, 1, SEERS_RING_I);
ItemMapping.ITEM_WARRIOR_RING = new ItemMapping(WARRIOR_RING, true, 1, WARRIOR_RING_I);
ItemMapping.ITEM_ARCHERS_RING = new ItemMapping(ARCHERS_RING, true, 1, ARCHERS_RING_I);
ItemMapping.ITEM_TREASONOUS_RING = new ItemMapping(TREASONOUS_RING, true, 1, TREASONOUS_RING_I);
ItemMapping.ITEM_TYRANNICAL_RING = new ItemMapping(TYRANNICAL_RING, true, 1, TYRANNICAL_RING_I);
ItemMapping.ITEM_RING_OF_THE_GODS = new ItemMapping(RING_OF_THE_GODS, true, 1, RING_OF_THE_GODS_I);
ItemMapping.ITEM_RING_OF_SUFFERING = new ItemMapping(RING_OF_SUFFERING, true, 1, RING_OF_SUFFERING_I);
ItemMapping.ITEM_GRANITE_RING = new ItemMapping(GRANITE_RING, true, 1, GRANITE_RING_I);

// Bounty hunter
ItemMapping.ITEM_GRANITE_MAUL = new ItemMapping(GRANITE_MAUL, GRANITE_MAUL_12848);
ItemMapping.ITEM_MAGIC_SHORTBOW = new ItemMapping(MAGIC_SHORTBOW, MAGIC_SHORTBOW_I);
ItemMapping.ITEM_MAGIC_SHORTBOW_SCROLL = new ItemMapping(MAGIC_SHORTBOW_SCROLL, MAGIC_SHORTBOW_I);
ItemMapping.ITEM_SARADOMINS_BLESSED_SWORD = new ItemMapping(SARADOMINS_TEAR, SARADOMINS_BLESSED_SWORD);

// Jewellery with charges
ItemMapping.ITEM_RING_OF_WEALTH = new ItemMapping(RING_OF_WEALTH, true, 1, RING_OF_WEALTH_1);
ItemMapping.ITEM_RING_OF_WEALTH_SCROLL = new ItemMapping(RING_OF_WEALTH_SCROLL, RING_OF_WEALTH_I, RING_OF_WEALTH_I1, RING_OF_WEALTH_I2, RING_OF_WEALTH_I3, RING_OF_WEALTH_I4, RING_OF_WEALTH_I5);
ItemMapping.ITEM_AMULET_OF_GLORY = new ItemMapping(AMULET_OF_GLORY, AMULET_OF_GLORY1, AMULET_OF_GLORY2, AMULET_OF_GLORY3, AMULET_OF_GLORY5);
ItemMapping.ITEM_AMULET_OF_GLORY_T = new ItemMapping(AMULET_OF_GLORY_T, AMULET_OF_GLORY_T1, AMULET_OF_GLORY_T2, AMULET_OF_GLORY_T3, AMULET_OF_GLORY_T5);
ItemMapping.ITEM_SKILLS_NECKLACE = new ItemMapping(SKILLS_NECKLACE, SKILLS_NECKLACE1, SKILLS_NECKLACE2, SKILLS_NECKLACE3, SKILLS_NECKLACE5);
ItemMapping.ITEM_RING_OF_DUELING = new ItemMapping(RING_OF_DUELING8, RING_OF_DUELING1, RING_OF_DUELING2, RING_OF_DUELING3, RING_OF_DUELING4, RING_OF_DUELING5, RING_OF_DUELING6, RING_OF_DUELING7);
ItemMapping.ITEM_GAMES_NECKLACE = new ItemMapping(GAMES_NECKLACE8, GAMES_NECKLACE1, GAMES_NECKLACE2, GAMES_NECKLACE3, GAMES_NECKLACE4, GAMES_NECKLACE5, GAMES_NECKLACE6, GAMES_NECKLACE7);

// Degradable/charged weaponry/armour
ItemMapping.ITEM_ABYSSAL_WHIP = new ItemMapping(ABYSSAL_WHIP, VOLCANIC_ABYSSAL_WHIP, FROZEN_ABYSSAL_WHIP, ABYSSAL_WHIP_OR);
ItemMapping.ITEM_KRAKEN_TENTACLE = new ItemMapping(KRAKEN_TENTACLE, ABYSSAL_TENTACLE, ABYSSAL_TENTACLE_OR);
ItemMapping.ITEM_TRIDENT_OF_THE_SEAS = new ItemMapping(UNCHARGED_TRIDENT, TRIDENT_OF_THE_SEAS);
ItemMapping.ITEM_TRIDENT_OF_THE_SEAS_E = new ItemMapping(UNCHARGED_TRIDENT_E, TRIDENT_OF_THE_SEAS_E);
ItemMapping.ITEM_TRIDENT_OF_THE_SWAMP = new ItemMapping(UNCHARGED_TOXIC_TRIDENT, TRIDENT_OF_THE_SWAMP);
ItemMapping.ITEM_TRIDENT_OF_THE_SWAMP_E = new ItemMapping(UNCHARGED_TOXIC_TRIDENT_E, TRIDENT_OF_THE_SWAMP_E);
ItemMapping.ITEM_TOXIC_BLOWPIPE = new ItemMapping(TOXIC_BLOWPIPE_EMPTY, TOXIC_BLOWPIPE);
ItemMapping.ITEM_TOXIC_STAFF_OFF_THE_DEAD = new ItemMapping(TOXIC_STAFF_UNCHARGED, TOXIC_STAFF_OF_THE_DEAD);
ItemMapping.ITEM_SERPENTINE_HELM = new ItemMapping(SERPENTINE_HELM_UNCHARGED, SERPENTINE_HELM, TANZANITE_HELM_UNCHARGED, TANZANITE_HELM, MAGMA_HELM_UNCHARGED, MAGMA_HELM);
ItemMapping.ITEM_DRAGONFIRE_SHIELD = new ItemMapping(DRAGONFIRE_SHIELD_11284, DRAGONFIRE_SHIELD);
ItemMapping.ITEM_DRAGONFIRE_WARD = new ItemMapping(DRAGONFIRE_WARD_22003, DRAGONFIRE_WARD);
ItemMapping.ITEM_ANCIENT_WYVERN_SHIELD = new ItemMapping(ANCIENT_WYVERN_SHIELD_21634, ANCIENT_WYVERN_SHIELD);
ItemMapping.ITEM_SANGUINESTI_STAFF = new ItemMapping(SANGUINESTI_STAFF_UNCHARGED, SANGUINESTI_STAFF, HOLY_SANGUINESTI_STAFF_UNCHARGED, HOLY_SANGUINESTI_STAFF);
ItemMapping.ITEM_SCYTHE_OF_VITUR = new ItemMapping(SCYTHE_OF_VITUR_UNCHARGED, SCYTHE_OF_VITUR, HOLY_SCYTHE_OF_VITUR_UNCHARGED, HOLY_SCYTHE_OF_VITUR, SANGUINE_SCYTHE_OF_VITUR_UNCHARGED, SANGUINE_SCYTHE_OF_VITUR);
ItemMapping.ITEM_TOME_OF_FIRE = new ItemMapping(TOME_OF_FIRE_EMPTY, TOME_OF_FIRE);
ItemMapping.ITEM_TOME_OF_WATER = new ItemMapping(TOME_OF_WATER_EMPTY, TOME_OF_WATER);
ItemMapping.ITEM_CRAWS_BOW = new ItemMapping(CRAWS_BOW_U, CRAWS_BOW);
ItemMapping.ITEM_VIGGORAS_CHAINMACE = new ItemMapping(VIGGORAS_CHAINMACE_U, VIGGORAS_CHAINMACE);
ItemMapping.ITEM_THAMMARONS_SCEPTRE = new ItemMapping(THAMMARONS_SCEPTRE_U, THAMMARONS_SCEPTRE);
ItemMapping.ITEM_WEBWEAVER_BOW = new ItemMapping(WEBWEAVER_BOW_U, WEBWEAVER_BOW);
ItemMapping.ITEM_URSINE_CHAINMACE = new ItemMapping(URSINE_CHAINMACE_U, URSINE_CHAINMACE);
ItemMapping.ITEM_ACCURSED_SCEPTRE = new ItemMapping(ACCURSED_SCEPTRE_U, ACCURSED_SCEPTRE);
ItemMapping.ITEM_ACCURSED_SCEPTRE_A = new ItemMapping(ACCURSED_SCEPTRE_AU, ACCURSED_SCEPTRE_A);
ItemMapping.ITEM_BRYOPHYTAS_STAFF = new ItemMapping(BRYOPHYTAS_STAFF_UNCHARGED, BRYOPHYTAS_STAFF);
ItemMapping.ITEM_RING_OF_ENDURANCE = new ItemMapping(RING_OF_ENDURANCE_UNCHARGED_24844, RING_OF_ENDURANCE);
ItemMapping.ITEM_TUMEKENS_SHADOW = new ItemMapping(TUMEKENS_SHADOW_UNCHARGED, TUMEKENS_SHADOW);
ItemMapping.ITEM_PHARAOHS_SCEPTRE = new ItemMapping(PHARAOHS_SCEPTRE_UNCHARGED, true, 1, PHARAOHS_SCEPTRE);
ItemMapping.ITEM_VENATOR_BOW = new ItemMapping(VENATOR_BOW_UNCHARGED, VENATOR_BOW);

// Tombs of Amascut gear
ItemMapping.ITEM_ELIDINIS_WARD = new ItemMapping(ELIDINIS_WARD, ELIDINIS_WARD_F, ELIDINIS_WARD_OR);
ItemMapping.ITEM_OSMUMTENS_FANG = new ItemMapping(OSMUMTENS_FANG, OSMUMTENS_FANG_OR);

// Infinity colour kits
ItemMapping.ITEM_INFINITY_TOP = new ItemMapping(INFINITY_TOP, INFINITY_TOP_20574, DARK_INFINITY_TOP, LIGHT_INFINITY_TOP);
ItemMapping.ITEM_INFINITY_TOP_LIGHT_COLOUR_KIT = new ItemMapping(LIGHT_INFINITY_COLOUR_KIT, LIGHT_INFINITY_TOP);
ItemMapping.ITEM_INFINITY_TOP_DARK_COLOUR_KIT = new ItemMapping(DARK_INFINITY_COLOUR_KIT, DARK_INFINITY_TOP);
ItemMapping.ITEM_INFINITY_BOTTOMS = new ItemMapping(INFINITY_BOTTOMS, INFINITY_BOTTOMS_20575, DARK_INFINITY_BOTTOMS, LIGHT_INFINITY_BOTTOMS);
ItemMapping.ITEM_INFINITY_BOTTOMS_LIGHT_COLOUR_KIT = new ItemMapping(LIGHT_INFINITY_COLOUR_KIT, LIGHT_INFINITY_BOTTOMS);
ItemMapping.ITEM_INFINITY_BOTTOMS_DARK_COLOUR_KIT = new ItemMapping(DARK_INFINITY_COLOUR_KIT, DARK_INFINITY_BOTTOMS);
ItemMapping.ITEM_INFINITY_HAT = new ItemMapping(INFINITY_HAT, DARK_INFINITY_HAT, LIGHT_INFINITY_HAT);
ItemMapping.ITEM_INFINITY_HAT_LIGHT_COLOUR_KIT = new ItemMapping(LIGHT_INFINITY_COLOUR_KIT, LIGHT_INFINITY_HAT);
ItemMapping.ITEM_INFINITY_HAT_DARK_COLOUR_KIT = new ItemMapping(DARK_INFINITY_COLOUR_KIT, DARK_INFINITY_HAT);

// Miscellaneous ornament kits
ItemMapping.ITEM_DARK_BOW = new ItemMapping(DARK_BOW, DARK_BOW_12765, DARK_BOW_12766, DARK_BOW_12767, DARK_BOW_12768, DARK_BOW_20408);
ItemMapping.ITEM_ODIUM_WARD = new ItemMapping(ODIUM_WARD, ODIUM_WARD_12807);
ItemMapping.ITEM_MALEDICTION_WARD = new ItemMapping(MALEDICTION_WARD, MALEDICTION_WARD_12806);
ItemMapping.ITEM_STEAM_BATTLESTAFF = new ItemMapping(STEAM_BATTLESTAFF, STEAM_BATTLESTAFF_12795);
ItemMapping.ITEM_LAVA_BATTLESTAFF = new ItemMapping(LAVA_BATTLESTAFF, LAVA_BATTLESTAFF_21198);
ItemMapping.ITEM_TZHAARKETOM = new ItemMapping(TZHAARKETOM, TZHAARKETOM_T);
ItemMapping.ITEM_TZHAARKETOM_ORNAMENT_KIT = new ItemMapping(TZHAARKETOM_ORNAMENT_KIT, TZHAARKETOM_T);
ItemMapping.ITEM_DRAGON_HUNTER_CROSSBOW = new ItemMapping(DRAGON_HUNTER_CROSSBOW, DRAGON_HUNTER_CROSSBOW_B, DRAGON_HUNTER_CROSSBOW_T);

// Slayer helm/black mask
ItemMapping.ITEM_BLACK_MASK = new ItemMapping(BLACK_MASK, true, 1, BLACK_MASK, SLAYER_HELMET);

// Revertible items
ItemMapping.ITEM_HYDRA_LEATHER = new ItemMapping(HYDRA_LEATHER, FEROCIOUS_GLOVES);
ItemMapping.ITEM_HYDRA_TAIL = new ItemMapping(HYDRA_TAIL, BONECRUSHER_NECKLACE);
ItemMapping.ITEM_DRAGONBONE_NECKLACE = new ItemMapping(DRAGONBONE_NECKLACE, BONECRUSHER_NECKLACE);
ItemMapping.ITEM_BOTTOMLESS_COMPOST_BUCKET = new ItemMapping(BOTTOMLESS_COMPOST_BUCKET, BOTTOMLESS_COMPOST_BUCKET_22997);
ItemMapping.ITEM_BASILISK_JAW = new ItemMapping(BASILISK_JAW, NEITIZNOT_FACEGUARD);
ItemMapping.ITEM_HELM_OF_NEITIZNOT = new ItemMapping(HELM_OF_NEITIZNOT, NEITIZNOT_FACEGUARD);
ItemMapping.ITEM_TWISTED_HORNS = new ItemMapping(TWISTED_HORNS, TWISTED_SLAYER_HELMET, TWISTED_SLAYER_HELMET_I, TWISTED_SLAYER_HELMET_I_25191, TWISTED_SLAYER_HELMET_I_26681);
ItemMapping.ITEM_ELDRITCH_ORB = new ItemMapping(ELDRITCH_ORB, ELDRITCH_NIGHTMARE_STAFF);
ItemMapping.ITEM_HARMONISED_ORB = new ItemMapping(HARMONISED_ORB, HARMONISED_NIGHTMARE_STAFF);
ItemMapping.ITEM_VOLATILE_ORB = new ItemMapping(VOLATILE_ORB, VOLATILE_NIGHTMARE_STAFF);
ItemMapping.ITEM_NIGHTMARE_STAFF = new ItemMapping(NIGHTMARE_STAFF, ELDRITCH_NIGHTMARE_STAFF, HARMONISED_NIGHTMARE_STAFF, VOLATILE_NIGHTMARE_STAFF);
ItemMapping.ITEM_GHARZI_RAPIER = new ItemMapping(GHRAZI_RAPIER, HOLY_GHRAZI_RAPIER);
ItemMapping.ITEM_MASTER_SCROLL_BOOK = new ItemMapping(MASTER_SCROLL_BOOK_EMPTY, MASTER_SCROLL_BOOK);
ItemMapping.ITEM_ARCANE_SIGIL = new ItemMapping(ARCANE_SIGIL, ELIDINIS_WARD_F, ELIDINIS_WARD_OR);

// Trouver Parchment
ItemMapping.ITEM_TROUVER_PARCHMENT = new ItemMapping(
    TROUVER_PARCHMENT, INFERNAL_MAX_CAPE_L, FIRE_MAX_CAPE_L, ASSEMBLER_MAX_CAPE_L, BRONZE_DEFENDER_L, IRON_DEFENDER_L, STEEL_DEFENDER_L, BLACK_DEFENDER_L, MITHRIL_DEFENDER_L, ADAMANT_DEFENDER_L,
    RUNE_DEFENDER_L, DRAGON_DEFENDER_L, DECORATIVE_SWORD_L, DECORATIVE_ARMOUR_L, DECORATIVE_ARMOUR_L_24159, DECORATIVE_HELM_L, DECORATIVE_SHIELD_L, DECORATIVE_ARMOUR_L_24162, DECORATIVE_ARMOUR_L_24163, DECORATIVE_ARMOUR_L_24164,
    DECORATIVE_ARMOUR_L_24165, DECORATIVE_ARMOUR_L_24166, DECORATIVE_ARMOUR_L_24167, DECORATIVE_ARMOUR_L_24168, SARADOMIN_HALO_L, ZAMORAK_HALO_L, GUTHIX_HALO_L, HEALER_HAT_L, FIGHTER_HAT_L, RANGER_HAT_L,
    FIGHTER_TORSO_L, PENANCE_SKIRT_L, VOID_KNIGHT_TOP_L, ELITE_VOID_TOP_L, VOID_KNIGHT_ROBE_L, ELITE_VOID_ROBE_L, VOID_KNIGHT_MACE_L, VOID_KNIGHT_GLOVES_L, VOID_MAGE_HELM_L, VOID_RANGER_HELM_L,
    VOID_MELEE_HELM_L, AVERNIC_DEFENDER_L, ARMADYL_HALO_L, BANDOS_HALO_L, SEREN_HALO_L, ANCIENT_HALO_L, BRASSICA_HALO_L, AVAS_ASSEMBLER_L, FIRE_CAPE_L, INFERNAL_CAPE_L, IMBUED_SARADOMIN_MAX_CAPE_L,
    IMBUED_ZAMORAK_MAX_CAPE_L, IMBUED_GUTHIX_MAX_CAPE_L, IMBUED_SARADOMIN_CAPE_L, IMBUED_ZAMORAK_CAPE_L, IMBUED_GUTHIX_CAPE_L, RUNE_POUCH_L, RUNNER_HAT_L, DECORATIVE_BOOTS_L, DECORATIVE_FULL_HELM_L,
    MASORI_ASSEMBLER_L, MASORI_ASSEMBLER_MAX_CAPE_L, RUNE_DEFENDER_LT, VOID_KNIGHT_TOP_LOR, VOID_KNIGHT_ROBE_LOR, VOID_KNIGHT_GLOVES_LOR, ELITE_VOID_TOP_LOR, ELITE_VOID_ROBE_LOR, VOID_MAGE_HELM_LOR,
    VOID_RANGER_HELM_LOR, VOID_MELEE_HELM_LOR, BARRONITE_MACE_L);

ItemMapping.ITEM_TROUVER_PARCHMENT_REFUND_LARGE = new ItemMapping(
    COINS_995, 475000, INFERNAL_MAX_CAPE_L, FIRE_MAX_CAPE_L, ASSEMBLER_MAX_CAPE_L, RUNE_DEFENDER_L, DRAGON_DEFENDER_L, DECORATIVE_SWORD_L, DECORATIVE_ARMOUR_L, DECORATIVE_ARMOUR_L_24159, DECORATIVE_HELM_L, DECORATIVE_SHIELD_L,
    DECORATIVE_ARMOUR_L_24162, DECORATIVE_ARMOUR_L_24163, DECORATIVE_ARMOUR_L_24164, DECORATIVE_ARMOUR_L_24165, DECORATIVE_ARMOUR_L_24166, DECORATIVE_ARMOUR_L_24167, DECORATIVE_ARMOUR_L_24168, SARADOMIN_HALO_L,
    ZAMORAK_HALO_L, GUTHIX_HALO_L, HEALER_HAT_L, FIGHTER_HAT_L, RANGER_HAT_L, FIGHTER_TORSO_L, PENANCE_SKIRT_L, VOID_KNIGHT_TOP_L, ELITE_VOID_TOP_L, VOID_KNIGHT_ROBE_L, ELITE_VOID_ROBE_L, VOID_KNIGHT_MACE_L,
    VOID_KNIGHT_GLOVES_L, VOID_MAGE_HELM_L, VOID_RANGER_HELM_L, VOID_MELEE_HELM_L, AVERNIC_DEFENDER_L, ARMADYL_HALO_L, BANDOS_HALO_L, SEREN_HALO_L, ANCIENT_HALO_L, BRASSICA_HALO_L, AVAS_ASSEMBLER_L,
    FIRE_CAPE_L, INFERNAL_CAPE_L, IMBUED_SARADOMIN_MAX_CAPE_L, IMBUED_ZAMORAK_MAX_CAPE_L, IMBUED_GUTHIX_MAX_CAPE_L, IMBUED_SARADOMIN_CAPE_L, IMBUED_ZAMORAK_CAPE_L, IMBUED_GUTHIX_CAPE_L, RUNE_POUCH_L, RUNNER_HAT_L, DECORATIVE_BOOTS_L, DECORATIVE_FULL_HELM_L,
    MASORI_ASSEMBLER_L, MASORI_ASSEMBLER_MAX_CAPE_L, RUNE_DEFENDER_LT, VOID_KNIGHT_TOP_LOR, VOID_KNIGHT_ROBE_LOR, VOID_KNIGHT_GLOVES_LOR, ELITE_VOID_TOP_LOR, ELITE_VOID_ROBE_LOR, VOID_MAGE_HELM_LOR,
    VOID_RANGER_HELM_LOR, VOID_MELEE_HELM_LOR, BARRONITE_MACE_L);
ItemMapping.ITEM_TROUVER_PARCHMENT_REFUND_SMALL = new ItemMapping(COINS_995, 47500, BRONZE_DEFENDER_L, IRON_DEFENDER_L, STEEL_DEFENDER_L, BLACK_DEFENDER_L, MITHRIL_DEFENDER_L, ADAMANT_DEFENDER_L);

// Crystal items
ItemMapping.ITEM_CRYSTAL_TOOL_SEED = new ItemMapping(CRYSTAL_TOOL_SEED, CRYSTAL_AXE, CRYSTAL_AXE_INACTIVE, CRYSTAL_HARPOON, CRYSTAL_HARPOON_INACTIVE, CRYSTAL_PICKAXE, CRYSTAL_PICKAXE_INACTIVE);
ItemMapping.ITEM_CRYSTAL_AXE = new ItemMapping(DRAGON_AXE, CRYSTAL_AXE, CRYSTAL_AXE_INACTIVE);
ItemMapping.ITEM_CRYSTAL_HARPOON = new ItemMapping(DRAGON_HARPOON, CRYSTAL_HARPOON, CRYSTAL_HARPOON_INACTIVE);
ItemMapping.ITEM_CRYSTAL_PICKAXE = new ItemMapping(DRAGON_PICKAXE, CRYSTAL_PICKAXE, CRYSTAL_PICKAXE_INACTIVE);
ItemMapping.ITEM_BLADE_OF_SAELDOR = new ItemMapping(BLADE_OF_SAELDOR_INACTIVE, true, 1, BLADE_OF_SAELDOR);
ItemMapping.ITEM_CRYSTAL_BOW = new ItemMapping(CRYSTAL_WEAPON_SEED, CRYSTAL_BOW, CRYSTAL_BOW_24123, CRYSTAL_BOW_INACTIVE);
ItemMapping.ITEM_CRYSTAL_HALBERD = new ItemMapping(CRYSTAL_WEAPON_SEED, CRYSTAL_HALBERD, CRYSTAL_HALBERD_24125, CRYSTAL_HALBERD_INACTIVE);
ItemMapping.ITEM_CRYSTAL_SHIELD = new ItemMapping(CRYSTAL_WEAPON_SEED, CRYSTAL_SHIELD, CRYSTAL_SHIELD_24127, CRYSTAL_SHIELD_INACTIVE);
ItemMapping.ITEM_CRYSTAL_HELMET = new ItemMapping(CRYSTAL_ARMOUR_SEED, true, 1, CRYSTAL_HELM);
ItemMapping.ITEM_CRYSTAL_LEGS = new ItemMapping(CRYSTAL_ARMOUR_SEED, true, 2, CRYSTAL_LEGS);
ItemMapping.ITEM_CRYSTAL_BODY = new ItemMapping(CRYSTAL_ARMOUR_SEED, true, 3, CRYSTAL_BODY);
ItemMapping.ITEM_BOW_OF_FAERDHINEN = new ItemMapping(BOW_OF_FAERDHINEN_INACTIVE, true, 1, BOW_OF_FAERDHINEN);

// Bird nests
ItemMapping.ITEM_BIRD_NEST = new ItemMapping(BIRD_NEST_5075, BIRD_NEST, BIRD_NEST_5071, BIRD_NEST_5072, BIRD_NEST_5073, BIRD_NEST_5074, BIRD_NEST_7413, BIRD_NEST_13653, BIRD_NEST_22798, BIRD_NEST_22800, CLUE_NEST_EASY, CLUE_NEST_MEDIUM, CLUE_NEST_HARD, CLUE_NEST_ELITE);

// Ancestral robes
ItemMapping.ITEM_ANCESTRAL_HAT = new ItemMapping(ANCESTRAL_HAT, TWISTED_ANCESTRAL_HAT);
ItemMapping.ITEM_ANCESTRAL_ROBE_TOP = new ItemMapping(ANCESTRAL_ROBE_TOP, TWISTED_ANCESTRAL_ROBE_TOP);
ItemMapping.ITEM_ANCESTRAL_ROBE_BOTTOM = new ItemMapping(ANCESTRAL_ROBE_BOTTOM, TWISTED_ANCESTRAL_ROBE_BOTTOM);

// Graceful
ItemMapping.ITEM_MARK_OF_GRACE = new ItemMapping(AMYLASE_CRYSTAL, true, 10, MARK_OF_GRACE);
ItemMapping.ITEM_GRACEFUL_HOOD = new ItemMapping(MARK_OF_GRACE, true, 28, GRACEFUL_HOOD);
ItemMapping.ITEM_GRACEFUL_TOP = new ItemMapping(MARK_OF_GRACE, true, 44, GRACEFUL_TOP);
ItemMapping.ITEM_GRACEFUL_LEGS = new ItemMapping(MARK_OF_GRACE, true, 48, GRACEFUL_LEGS);
ItemMapping.ITEM_GRACEFUL_GLOVES = new ItemMapping(MARK_OF_GRACE, true, 24, GRACEFUL_GLOVES);
ItemMapping.ITEM_GRACEFUL_BOOTS = new ItemMapping(MARK_OF_GRACE, true, 32, GRACEFUL_BOOTS);
ItemMapping.ITEM_GRACEFUL_CAPE = new ItemMapping(MARK_OF_GRACE, true, 32, GRACEFUL_CAPE);

// Trailblazer Graceful Ornament Kit
ItemMapping.ITEM_TRAILBLAZER_GRACEFUL_HOOD = new ItemMapping(TRAILBLAZER_GRACEFUL_ORNAMENT_KIT, GRACEFUL_HOOD_25069);
ItemMapping.ITEM_TRAILBLAZER_GRACEFUL_TOP = new ItemMapping(TRAILBLAZER_GRACEFUL_ORNAMENT_KIT, GRACEFUL_TOP_25075);
ItemMapping.ITEM_TRAILBLAZER_GRACEFUL_LEGS = new ItemMapping(TRAILBLAZER_GRACEFUL_ORNAMENT_KIT, GRACEFUL_LEGS_25078);
ItemMapping.ITEM_TRAILBLAZER_GRACEFUL_GLOVES = new ItemMapping(TRAILBLAZER_GRACEFUL_ORNAMENT_KIT, GRACEFUL_GLOVES_25081);
ItemMapping.ITEM_TRAILBLAZER_GRACEFUL_BOOTS = new ItemMapping(TRAILBLAZER_GRACEFUL_ORNAMENT_KIT, GRACEFUL_BOOTS_25084);
ItemMapping.ITEM_TRAILBLAZER_GRACEFUL_CAPE = new ItemMapping(TRAILBLAZER_GRACEFUL_ORNAMENT_KIT, GRACEFUL_CAPE_25072);

// 10 golden nuggets = 100 soft clay
ItemMapping.ITEM_GOLDEN_NUGGET = new ItemMapping(SOFT_CLAY, true, 10, GOLDEN_NUGGET);
ItemMapping.ITEM_PROSPECTOR_HELMET = new ItemMapping(GOLDEN_NUGGET, true, 32, PROSPECTOR_HELMET);
ItemMapping.ITEM_PROSPECTOR_JACKET = new ItemMapping(GOLDEN_NUGGET, true, 48, PROSPECTOR_JACKET);
ItemMapping.ITEM_PROSPECTOR_LEGS = new ItemMapping(GOLDEN_NUGGET, true, 40, PROSPECTOR_LEGS);
ItemMapping.ITEM_PROSPECTOR_BOOTS = new ItemMapping(GOLDEN_NUGGET, true, 24, PROSPECTOR_BOOTS);

// 10 unidentified minerals = 100 soft clay
ItemMapping.ITEM_UNIDENTIFIED_MINERALS = new ItemMapping(SOFT_CLAY, true, 10, UNIDENTIFIED_MINERALS);

// Converted to coins
ItemMapping.ITEM_TATTERED_PAGE = new ItemMapping(COINS_995, true, 1000, TATTERED_MOON_PAGE, TATTERED_SUN_PAGE, TATTERED_TEMPLE_PAGE);
ItemMapping.ITEM_LONG_BONE = new ItemMapping(COINS_995, true, 1000, LONG_BONE);
ItemMapping.ITEM_CURVED_BONE = new ItemMapping(COINS_995, true, 2000, CURVED_BONE);
ItemMapping.ITEM_PERFECT_SHELL = new ItemMapping(COINS_995, true, 600, PERFECT_SHELL);
ItemMapping.ITEM_PERFECT_SNAIL_SHELL = new ItemMapping(COINS_995, true, 600, PERFECT_SNAIL_SHELL);
ItemMapping.ITEM_SNAIL_SHELL = new ItemMapping(COINS_995, true, 600, SNAIL_SHELL);
ItemMapping.ITEM_TORTOISE_SHELL = new ItemMapping(COINS_995, true, 250, TORTOISE_SHELL);

const MAPPINGS = new Map();

for (const item of Object.values(ItemMapping)) {
  for (const itemId of item.untradableItems) {
    if (item.includeVariations) {
      const variations = invertedVariations[itemId] || [itemId];
      
      for (const variation of variations) {
        if (variation !== item.tradeableItem) {
          if (! MAPPINGS.has(variation)) {
            MAPPINGS.set(variation, []);
          }

          MAPPINGS.get(variation).push(item);
        }
      }
    } else {
      if (! MAPPINGS.has(itemId)) {
        MAPPINGS.set(itemId, []);
      }

      MAPPINGS.get(itemId).push(item);
    }
  }
}

/**
 * Get collection of items that are mapped from a single item ID.
 *
 * @param itemId the item ID
 * @returns {Array<ItemMapping>} the collection
 */
export function map(itemId) {
  const mapping = MAPPINGS.get(itemId);
  return mapping && mapping.length > 0 ? mapping : null;
}
