name: Dump game data

# To run locally: act --env GROUP_IRONMEN_PATH=$PWD -W .github/workflows/update-cache.yml -s GITHUB_TOKEN="$(gh auth token)" -P macos-latest=-self-hosted workflow_dispatch

on:
  workflow_dispatch:
  schedule:
    - cron: '47 * * * *'

jobs:
  cache:
    runs-on: macos-latest

    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: s4u/setup-maven-action@v1.15.0
        with:
          java-version: 11

      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}

      - uses: actions/checkout@v4
        with:
          repository: runelite/runelite
          path: cache/runelite

      # This will select the latest cache that has the same difference in valid keys as the second latest cache. This will prevent working with a cache that has invalid map data. If the cache is more than 24 hours old, it will be selected regardless of the difference in valid keys. This prevents the map from never updating when new content is released with inaccessible keys.
      - run: |
          cache=$(curl -s https://archive.openrs2.org/caches.json | jq -r '
              [ .[] | select(.game == "oldschool" and .environment == "live" and .language == "en" and (.sources | contains(["Jagex"])) and .size != null) ] |
              now as $current_time |
              map(
                if .timestamp == null then
                  . + {timestamp_seconds: 0}
                else
                  . + {timestamp_seconds: (.timestamp | sub("\\.[0-9]+Z$"; "Z") | strptime("%Y-%m-%dT%H:%M:%SZ") | mktime)}
                end
              ) |
              map(. + {age_in_hours: (($current_time - .timestamp_seconds) / 3600)}) |
              map(. + {difference: (.keys - .valid_keys)}) |
              sort_by(.id) | reverse |
              if .[0].age_in_hours > 24 then
                .[0]
              else
                .[1] as $second_highest |
                [.[] | select(.difference <= $second_highest.difference)] | max_by(.id)
              end
          ')
          id=$(echo $cache | jq -r '.id')
          echo "CACHE_ID=$id" >> $GITHUB_ENV

      - run: npm install
        working-directory: ./cache

      - run: npm install
        working-directory: ./site

      - uses: actions/cache@v4
        id: cache
        with:
          path: cache/cache
          key: cache-${{ env.CACHE_ID }}

      - if: steps.cache.outputs.cache-hit != 'true'
        run: curl -o cache/cache/xteas.json https://archive.openrs2.org/caches/runescape/$CACHE_ID/keys.json

      - if: steps.cache.outputs.cache-hit != 'true'
        run: curl -o cache/cache/disk.zip https://archive.openrs2.org/caches/runescape/$CACHE_ID/disk.zip

      - if: steps.cache.outputs.cache-hit != 'true'
        run: unzip cache/cache/disk.zip -d cache/cache

      - run: npm run update
        working-directory: ./cache

      - run: node scripts/quest-scraper.js
        working-directory: ./site

      - run: npm run bundle
        working-directory: ./site

      - uses: stefanzweifel/git-auto-commit-action@v5
        if: ${{ ! env.ACT }}
        with:
          commit_message: dump latest game data

      - run: rsync -avh --delete --exclude='.git' --exclude='node_modules' . $GROUP_IRONMEN_PATH
        if: ${{ env.ACT }}
